[{"/Users/meng.yan/workspace/machine-learning-playground/react-face-detection/src/index.js":"1","/Users/meng.yan/workspace/machine-learning-playground/react-face-detection/src/reportWebVitals.js":"2","/Users/meng.yan/workspace/machine-learning-playground/react-face-detection/src/App.js":"3","/Users/meng.yan/workspace/machine-learning-playground/react-face-detection/src/utilities.js":"4"},{"size":500,"mtime":1611370348436,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1611370348436,"results":"7","hashOfConfig":"6"},{"size":2422,"mtime":1611370348435,"results":"8","hashOfConfig":"6"},{"size":19149,"mtime":1611370348436,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"jngfmm",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/meng.yan/workspace/machine-learning-playground/react-face-detection/src/index.js",[],["20","21"],"/Users/meng.yan/workspace/machine-learning-playground/react-face-detection/src/reportWebVitals.js",[],"/Users/meng.yan/workspace/machine-learning-playground/react-face-detection/src/App.js",["22","23"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport React, { useRef } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\n// import * as facemesh from \"@tensorflow-models/facemesh\";\nimport * as facemesh from \"@tensorflow-models/face-landmarks-detection\";\nimport Webcam from \"react-webcam\";\nimport { drawMesh } from \"./utilities\";\n\nfunction App() {\n  // Setup references\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Load facemesh\n  const runFacemesh = async () => {\n    const net = await facemesh.load(\n      facemesh.SupportedPackages.mediapipeFacemesh\n    );\n\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\n  // Detect function\n  const detect = async (net) => {\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set Video Width\n      webcamRef.current.width = videoWidth;\n      webcamRef.current.height = videoHeight;\n\n      // Set Canvas Width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make detections\n      // const face = await net.estimateFaces(video);\n      const face = await net.estimateFaces({ input: video });\n      // console.log(face);\n\n      // Get canvas context for drawing\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawMesh(face, ctx);\n    }\n  };\n\n  runFacemesh();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zIndex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zIndex: 9,\n            width: 640,\n            height: 480,\n          }}\n        ></canvas>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/meng.yan/workspace/machine-learning-playground/react-face-detection/src/utilities.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":1,"column":8,"nodeType":"30","messageId":"31","endLine":1,"endColumn":12},{"ruleId":"28","severity":1,"message":"32","line":5,"column":13,"nodeType":"30","messageId":"31","endLine":5,"endColumn":15},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'tf' is defined but never used.","no-global-assign","no-unsafe-negation"]